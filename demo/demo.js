(()=>{"use strict";var __webpack_modules__={872:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// EXTERNAL MODULE: ./node_modules/three/build/three.module.js\nvar three_module = __webpack_require__(75);\n;// CONCATENATED MODULE: ./esm/TextureSwitchingLoader.js\n\n/**\n * Texture image loader, Switching TextureLoader and ImageBitmapLoader.\n */\nclass TextureSwitchingLoader {\n  constructor(manager) {\n    if (TextureSwitchingLoader.isSupportImageBitmap === undefined) {\n      TextureSwitchingLoader.isSupportImageBitmap = typeof createImageBitmap !== "undefined";\n    }\n    if (!TextureSwitchingLoader.isSupportImageBitmap) {\n      this.textureLoader = new three_module/* TextureLoader */.dpR(manager);\n    } else {\n      this.imageBitmapLoader = new three_module/* ImageBitmapLoader */.QRU(manager);\n      this.imageBitmapLoader.setOptions({\n        imageOrientation: "flipY"\n      }); //To find the same result TextureLoader and ImageBitmapLoader.\n    }\n  }\n  /**\n   * Load image as Texture or CanvasTexture.\n   *\n   * @param url\n   * @param option\n   * @return Promise<Texture> Texture or CanvasTexture\n   */\n  load(url, option) {\n    if (option == null) {\n      option = {};\n    }\n    if (TextureSwitchingLoader.isSupportImageBitmap) {\n      return this.loadImageBitmap(url, option);\n    }\n    return this.loadTexture(url, option);\n  }\n  loadImageBitmap(url, option) {\n    return new Promise((resolve, reject) => {\n      const onload = imageBitmap => {\n        const texture = new three_module/* CanvasTexture */.ROQ(imageBitmap);\n        TextureSwitchingLoader.setTextureOptions(texture, option.canvasTextureOption);\n        resolve(texture);\n      };\n      if (option.imageBitmapOption) {\n        this.imageBitmapLoader.setOptions(option.imageBitmapOption);\n      }\n      this.imageBitmapLoader.load(url, onload, undefined, err => {\n        console.log("TextureSwitchingLoader : ");\n        reject(err);\n      });\n    });\n  }\n  loadTexture(url, option) {\n    return new Promise((resolve, reject) => {\n      this.textureLoader.load(url, texture => {\n        TextureSwitchingLoader.setImageBitmapOptions(texture, option.imageBitmapOption);\n        TextureSwitchingLoader.setTextureOptions(texture, option.canvasTextureOption);\n        resolve(texture);\n      }, undefined, err => {\n        console.log("TextureSwitchingLoader : ");\n        reject(err);\n      });\n    });\n  }\n  static setTextureOptions(texture, option) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    if (option == null) return;\n    (_a = texture.mapping) !== null && _a !== void 0 ? _a : texture.mapping = option.mapping;\n    (_b = texture.wrapS) !== null && _b !== void 0 ? _b : texture.wrapS = option.wrapS;\n    (_c = texture.wrapT) !== null && _c !== void 0 ? _c : texture.wrapT = option.wrapT;\n    (_d = texture.minFilter) !== null && _d !== void 0 ? _d : texture.minFilter = option.minFilter;\n    (_e = texture.format) !== null && _e !== void 0 ? _e : texture.format = option.format;\n    (_f = texture.type) !== null && _f !== void 0 ? _f : texture.type = option.type;\n    (_g = texture.anisotropy) !== null && _g !== void 0 ? _g : texture.anisotropy = option.anisotropy;\n  }\n  static setImageBitmapOptions(texture, imageBitmapOption) {\n    if (imageBitmapOption == null) return;\n    const orientation = imageBitmapOption.imageOrientation;\n    if (orientation != null) {\n      texture.flipY = orientation === "flipY";\n    }\n    if (imageBitmapOption.premultiplyAlpha != null) texture.premultiplyAlpha = imageBitmapOption.premultiplyAlpha === "premultiply";\n  }\n}\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/controls/OrbitControls.js\nvar OrbitControls = __webpack_require__(12);\n;// CONCATENATED MODULE: ./demoSrc/common.js\n\n\n\n\nfunction initScene() {\n  const scene = new three_module/* Scene */.xsS();\n  return scene;\n}\nfunction initLight(scene) {\n  const ambientLight = new three_module/* AmbientLight */.Mig(0xffffff, 1.0);\n  scene.add(ambientLight);\n  return ambientLight;\n}\nfunction initCamera(scene, W, H) {\n  const camera = new three_module/* PerspectiveCamera */.cPb(45, W / H, 1, 400);\n  camera.position.set(0, 0, 100);\n  camera.updateMatrixWorld(false);\n  scene.add(camera);\n  return camera;\n}\nfunction initControl(camera, render) {\n  const control = new OrbitControls/* OrbitControls */.z(camera, render.domElement);\n  control.update();\n  return control;\n}\nfunction initRenderer(W, H) {\n  const renderOption = {\n    canvas: document.getElementById("webgl-canvas"),\n    antialias: true\n  };\n  const renderer = new three_module/* WebGLRenderer */.CP7(renderOption);\n  renderer.setClearColor(new three_module/* Color */.Ilk(0x000000));\n  renderer.setSize(W, H);\n  renderer.setPixelRatio(window.devicePixelRatio);\n  return renderer;\n}\nfunction initHelper(scene) {\n  const axesHelper = new three_module/* AxesHelper */.y8_(30);\n  scene.add(axesHelper);\n}\nfunction render(control, renderer, scene, camera) {\n  const rendering = () => {\n    control.update();\n    renderer.render(scene, camera);\n    requestAnimationFrame(rendering);\n  };\n  rendering();\n}\n;// CONCATENATED MODULE: ./demoSrc/demo.js\n\n\n\nconst W = 640;\nconst H = 480;\nconst onDomContentsLoaded = () => {\n  const scene = initScene();\n  initLight(scene);\n  const camera = initCamera(scene, W, H);\n  const renderer = initRenderer(W, H);\n  const control = initControl(camera, renderer);\n  initHelper(scene);\n  initSphere(scene);\n  render(control, renderer, scene, camera);\n};\nconst initSphere = scene => {\n  const geo = new three_module/* SphereGeometry */.xo$(20, 16, 16);\n  const mat = new three_module/* MeshBasicMaterial */.vBJ();\n  const mesh = new three_module/* Mesh */.Kj0(geo, mat);\n  scene.add(mesh);\n  let texture1;\n  let texture2;\n  three_module/* Cache.enabled */.CtF.enabled = true;\n  const loader = new TextureSwitchingLoader();\n  loader.load("./earth.jpg", {\n    imageBitmapOption: {\n      imageOrientation: "flipY"\n    }\n  }).then(texture => {\n    mat.map = texture;\n    mat.needsUpdate = true;\n    console.log("1st Load");\n    console.log(texture.image);\n    texture1 = texture;\n    loader.load("./earth.jpg").then(texture => {\n      console.log("2nd Load");\n      console.log(texture.image);\n      texture2 = texture;\n      if (texture1.image === texture2.image) {\n        console.log("share!");\n      }\n    });\n  });\n  loader.load("./earth.jpg");\n  loader.load("./earth.jpg");\n  loader.load("./earth.jpg");\n  loader.load("./earth.jpg");\n  loader.load("./earth.jpg");\n  setTimeout(() => {\n    loader.load("./earth.jpg");\n    loader.load("./earth.jpg");\n    loader.load("./earth.jpg");\n    loader.load("./earth.jpg");\n    loader.load("./earth.jpg");\n  }, 2000);\n};\nwindow.onload = onDomContentsLoaded;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///872\n')}},__webpack_module_cache__={},deferred;function __webpack_require__(Q){var U=__webpack_module_cache__[Q];if(void 0!==U)return U.exports;var F=__webpack_module_cache__[Q]={exports:{}};return __webpack_modules__[Q](F,F.exports,__webpack_require__),F.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,U,F,B)=>{if(!U){var e=1/0;for(s=0;s<deferred.length;s++){for(var[U,F,B]=deferred[s],I=!0,l=0;l<U.length;l++)(!1&B||e>=B)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](U[l])))?U.splice(l--,1):(I=!1,B<e&&(e=B));if(I){deferred.splice(s--,1);var i=F();void 0!==i&&(Q=i)}}return Q}B=B||0;for(var s=deferred.length;s>0&&deferred[s-1][2]>B;s--)deferred[s]=deferred[s-1];deferred[s]=[U,F,B]},__webpack_require__.d=(Q,U)=>{for(var F in U)__webpack_require__.o(U,F)&&!__webpack_require__.o(Q,F)&&Object.defineProperty(Q,F,{enumerable:!0,get:U[F]})},__webpack_require__.o=(Q,U)=>Object.prototype.hasOwnProperty.call(Q,U),__webpack_require__.j=577,(()=>{var Q={577:0};__webpack_require__.O.j=U=>0===Q[U];var U=(U,F)=>{var B,e,[I,l,i]=F,s=0;if(I.some((U=>0!==Q[U]))){for(B in l)__webpack_require__.o(l,B)&&(__webpack_require__.m[B]=l[B]);if(i)var t=i(__webpack_require__)}for(U&&U(F);s<I.length;s++)e=I[s],__webpack_require__.o(Q,e)&&Q[e]&&Q[e][0](),Q[e]=0;return __webpack_require__.O(t)},F=self.webpackChunk_masatomakino_threejs_texture_switching_loader=self.webpackChunk_masatomakino_threejs_texture_switching_loader||[];F.forEach(U.bind(null,0)),F.push=U.bind(null,F.push.bind(F))})();var __webpack_exports__=__webpack_require__.O(void 0,[736],(()=>__webpack_require__(872)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();